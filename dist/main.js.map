{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./source/vue/observe/array.js","webpack:///./source/vue/observe/observe.js","webpack:///./source/vue/observe/index.js","webpack:///./source/vue/utils/utils.js","webpack:///./source/vue/utils/domUtils.js","webpack:///./source/vue/observe/watcher.js","webpack:///./source/vue/compiler/diretive/diretives.js","webpack:///./source/vue/index.js","webpack:///./source/vue/compiler/compiler.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","oldArrProtoMethods","Array","arrayMethods","observeArray","inserted","length","defineReactive","data","val","console","log","newVal","forEach","arg","apply","this","args","slice","isArray","__proto__","walk","entries","initState","vm","options","$options","_data","proxy","initData","computed","watch","source","freeze","toString","cached","fn","cache","str","camelizeRE","hyphenateRE","replace","_","toUpperCase","toLowerCase","isElement","node","nodeType","isText","uid","exprOrFn","cb","ops","defaultReg","util","expr","split","reduce","cur","textContent","getValue","Vue","_init","el","$mount","$el","document","querySelector","query","_update","firstChild","createDocumentFragment","appendChild","complier","childNodes","compilerText","msg","obj","age","arr","push","a"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { observe } from \"./index\";\r\n\r\n/**  拦截用户调用得push、shift、unshift、pop reverse sort splice\r\n * 因为这些方法会改变原来得数组 这些需要重写\r\n */\r\n\r\n//  先获取老得数组得方法 目前只改写这7个方法\r\nlet oldArrProtoMethods = Array.prototype;\r\n\r\n// 拷贝一个新得对象 可以查找到老得方法\r\nexport let arrayMethods = Object.create(oldArrProtoMethods);\r\n\r\nlet methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'pop',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n];\r\n\r\n// 需要循环对新增的每一项数据进行观察\r\nexport function observeArray(inserted) {\r\n    for(let i=0;i<inserted.length;i++){\r\n        observe(inserted[i]);\r\n    }\r\n}\r\n\r\nmethods.forEach(m=>{\r\n    // 函数劫持 切片编程\r\n    arrayMethods[m] = function(...arg){\r\n       const r = oldArrProtoMethods[m].apply(this,arg);\r\n    //    我们需要对新增的数据进行监控\r\n       let inserted;\r\n       switch (m) {\r\n           case 'push':\r\n           case 'unshift':\r\n               inserted = arg;\r\n               break;\r\n           case 'splice':\r\n                inserted = args.slice(2)\r\n               break;\r\n       }\r\n       if(inserted) observeArray(inserted);\r\n       return r;\r\n    }\r\n})","import {observe} from './index';\r\nimport {observeArray, arrayMethods} from './array';\r\n// 定义响应式数据变化\r\nexport function defineReactive(data,key,val){\r\n    // 递归 判断val是不是对象{name:'lee',age:18}\r\n    observe(val);\r\n    Object.defineProperty(data,key,{\r\n        get(){\r\n            console.log(\"获取数据\");\r\n            return val;\r\n        },\r\n        set(newVal){\r\n            if (val === newVal) return;\r\n            console.log(\"设置数据\");\r\n            val = newVal;\r\n        }\r\n    });\r\n}\r\n\r\nexport class Observe{\r\n    constructor(data) { // 此时得data就是定义得vm._data\r\n\r\n        //将用户得数据使用Object.defineProperty重新定义\r\n        if(Array.isArray(data)){\r\n            // 我们需要通过原型链 调用我们重写的相关的数组的方法\r\n            data.__proto__ = arrayMethods;\r\n            // 监控数组中的每一项 因为有可能数组中里边也是对象\r\n            observeArray(data);\r\n        }else{\r\n            this.walk(data);\r\n        }\r\n        \r\n    }\r\n    walk(data){       \r\n        for (let [key, val] of Object.entries(data)) {\r\n            defineReactive(data, key, val);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default Observe;","import {Observe} from './observe'\r\n\r\nexport function initState(vm){\r\n    let options = vm.$options;\r\n    if (options.data)  initData(vm);//初始化数据\r\n\r\n\r\n    if (options.computed) {\r\n        initComputed(); //初始化计算属性\r\n    }\r\n\r\n    if (options.watch) {\r\n        initWatch(); //初始化watch\r\n    }\r\n}\r\n// 观察\r\nexport function observe(data){\r\n    if(typeof data !== 'object' || data == null){\r\n        return;\r\n    }\r\n\r\n    return new Observe(data);\r\n}\r\nfunction proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key];\r\n        },\r\n        set(newVal){\r\n            vm[source][key] = newVal;\r\n        }\r\n    })\r\n}\r\n// 初始化数据  将数据重新定义 核心：Object.defineProperty\r\nfunction initData(vm){\r\n    let data = vm.$options.data;\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data || {}\r\n    // 将在vm._data上得操作代理到vm上\r\n    for(let key in data){\r\n        proxy(vm,'_data',key);\r\n    }\r\n    observe(vm._data);\r\n}\r\n\r\nfunction initComputed() {\r\n\r\n}\r\n\r\nfunction initWatch() {\r\n\r\n}","/**\r\n * \r\n * 一些帮助工具公共方法\r\n */\r\nexport const emptyObject = Object.freeze({});\r\n\r\nexport function isTrue(v){\r\n    return v === true\r\n}\r\n\r\nexport function isFalse(v) {\r\n    return v === false\r\n}\r\n\r\nexport function isUndef(v){\r\n    return v === undefined || v === null\r\n}\r\n\r\nexport function isDef(v){\r\n    return v !== undefined && v !== null\r\n}\r\n\r\nexport function isObject(obj) {\r\n    return obj !== null && typeof obj === 'object'\r\n}\r\n\r\nconst _toString = Object.prototype.toString;\r\n\r\nexport function isRegExp(v){\r\n    return _toString.call(v) === '[object RegExp]'\r\n}\r\n\r\nexport function isPromise(val) {\r\n    return (\r\n        isDef(val) &&\r\n        typeof val.then === 'function' &&\r\n        typeof val.catch === 'function'\r\n    )\r\n}\r\n\r\n// 是否有key，\r\n/**\r\n * \r\n * @param {Object} config 虚拟dom树上的属性对象\r\n */\r\nexport function hasValidKey(config) {\r\n    config = config || {};\r\n    return config.key !== undefined;\r\n}\r\n// 是否有ref，\r\n/**\r\n * \r\n * @param {Object} config 虚拟dom树上的属性对象\r\n */\r\nexport function hasValidRef(config) {\r\n    config = config || {};\r\n    return config.ref !== undefined;\r\n}\r\n\r\n/**\r\n * 确定是children中的是文本节点\r\n * @param {*} value \r\n */\r\nexport function isPrimitive(value) {\r\n    const type = typeof value;\r\n    return type === 'number' || type === 'string' || type === 'symbol' || type === 'boolean'\r\n}\r\n/**\r\n * 判断arr是不是数组\r\n * @param {Array} arr \r\n */\r\nexport function isArray(arr) {\r\n    return Array.isArray(arr);\r\n}\r\n\r\nexport function isFun(fun) {\r\n    return typeof fun === 'function';\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport function hasOwn(obj , key) {\r\n    return hasOwnProperty.call(obj, key)\r\n}\r\n\r\n// 一个对象的 __proto__ 属性指向了其构造函数的原型\r\n// 从一个空的对象字面量开始沿着原型链逐级检查。\r\nexport const hasProto = '__proto__' in {}\r\n\r\n// charCodeAt() 方法可返回指定位置的字符的 Unicode 编码\r\nexport function isReserved(str) {\r\n    const c = (str + '').charCodeAt(0)\r\n    return c === 0x24 || c === 0x5F\r\n}\r\n\r\n// 创造一个缓存函数 纯函数\r\nexport function cached(fn){\r\n    const cache = Object.create(null)\r\n    return (function cachedFn(str) {\r\n        const hit = cache[str]\r\n        return hit || (cache[str] = fn(str))\r\n    })\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g;\r\n/** 定义正则表达式：/-(\\w)/g，\r\n * 用来全局匹配字符串中\r\n * 中横线及连字符后的一个字符。\r\n * 若捕获到，则将字符以toUpperCase大写替换，否则以''替换。\r\n * 如：camelize('aa-bb') // aaBb\r\n * \r\n */\r\nexport const camelize = cached((str) => {\r\n    return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '')\r\n})\r\n\r\n/**\r\n * 驼峰转连字符\r\n * 实现方式同样是使用正则，\r\n *  / \\B([A - Z])/g用来全局匹配字符串中的大写字母, 然后替换掉。\r\n */\r\nconst hyphenateRE = /\\B([A-Z])/g\r\nexport const hyphenate = cached((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase()\r\n})\r\n\r\n\r\n","\r\n/** DOM 操作的方法\r\n * 元素/节点 的 创建、删除、判断等\r\n */\r\n\r\n function createElement(tagName){\r\n    return document.createElement(tagName);\r\n }\r\n\r\n function createTextNode(text) {\r\n     return document.createTextNode(text);\r\n }\r\n\r\nexport function isElement(node) {\r\n    return node.nodeType === 1\r\n}\r\n\r\nexport function isText(node) {\r\n    return node.nodeType === 3\r\n}\r\n/**\r\n *\r\n *\r\n * @param {*} parentNode\r\n * @param {*} newNode\r\n * @param {\r\n     *\r\n }\r\n referenceNode 在Chrome浏览器下， 如果不指定referenceNode的话， 将会报错。\r\n 当传入null时， 新插入的元素将会插入到父元素的子元素列表末尾。\r\n */\r\nfunction insertBefore(parentNode, newNode, referenceNode) {\r\n    parentNode.insertBefore(newNode, referenceNode)\r\n}\r\n\r\nfunction removeChild(node, child) {\r\n    node.removeChild(child)\r\n}\r\n\r\nfunction appendChild(node, child) {\r\n    node.appendChild(child)\r\n}\r\n\r\nfunction parentNode(node) {\r\n    return node.parentNode\r\n}\r\n\r\nfunction nextSibling(node) {\r\n    return node.nextSibling\r\n}\r\n\r\nfunction tagName(elm) {\r\n    return elm.tagName\r\n}\r\n\r\nfunction setTextContent(node, text) {\r\n    node.textContent = text\r\n}\r\n\r\nfunction getTextContent(node) {\r\n    return node.textContent\r\n}\r\n\r\n\r\n\r\nfunction setAttribute(node,key,value) {\r\n    node.setAttribute(key, value);\r\n}\r\n\r\nfunction setStyleContent(node, styleObj) {\r\n    // styleObj = {'fontSize':'12px','color':'red'} ->\r\n    // cssText : 'font-size:12px;color:red'\r\n     let cssText = Object.keys(styleObj).map(attr => {\r\n         return `${attr.replace(/([A-Z])/g,function(){ return\"-\"+arguments[1].toLowerCase()})}:${styleObj[attr]}`;\r\n     }).join(';');\r\n\r\n     node.style.cssText = cssText;\r\n}\r\nexport const htmlApi = {\r\n    createElement,\r\n    createTextNode,\r\n    insertBefore,\r\n    removeChild,\r\n    appendChild,\r\n    parentNode,\r\n    nextSibling,\r\n    tagName,\r\n    setTextContent,\r\n    getTextContent,\r\n    setAttribute,\r\n    isElement,\r\n    isText\r\n}\r\n export default htmlApi;","import { isFun } from \"../utils\";\r\n\r\nlet uid = 0; // 每一个new watcher的唯一标识\r\nclass Watcher{\r\n    /**\r\n     *Creates an instance of Watcher.\r\n     * @param {*} vm 当前组件的实例 new VUe\r\n     * @param {*} exprOrFn 用户可能传入的是一个表达式 也有可能传入的是一个函数\r\n     * @param {*} cb 用户传入的回调函数 vm.$watch('msg',cb)\r\n     * @param {*} ops 一些其他参数\r\n     * @memberof Watcher\r\n     */\r\n    constructor(vm,exprOrFn,cb=()=>{},ops={}) {\r\n        this.vm = vm;\r\n        this.exprOrFn = exprOrFn;\r\n        if(isFun(exprOrFn)){\r\n            //getter 就是new Watcher传入的第二个函数\r\n            this.getter = exprOrFn;\r\n        }\r\n        this.cb = cb;\r\n        this.ops = ops; \r\n        this.uid = uid++;   \r\n        \r\n        // 默认创建一个watcher 会调用自身的get方法\r\n        this.getter();\r\n    }\r\n    get(){\r\n        // 让这个当前传入的函数执行\r\n        this.getter();\r\n    }\r\n\r\n}\r\n// 渲染使用 计算属性 也用vm.watch \r\nexport default Watcher;","// 编译指令 比如{{}}  v-mode v-text v-html\r\n\r\n// 匹配 {{}}\r\nconst defaultReg = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nexport const util = {\r\n    getValue(vm, expr) {\r\n        let keys = expr.split('.');\r\n        keys.reduce((m, cur) => {\r\n            m = m[cur];\r\n            return m;\r\n        }, vm)\r\n    },\r\n    // 编译文本 {{msg}} {{obj.name}}\r\n    compilerText(node, vm) {\r\n        node.textContent = node.textContent.replace(defaultReg, function (...args) {\r\n            return util.getValue(vm, args[1]);\r\n        })\r\n    }\r\n}\r\n","\r\nimport {initState} from './observe'\r\nimport Watcher from './observe/watcher';\r\nimport { complier } from './compiler';\r\nfunction Vue(options){\r\n    this._init(options); //初始化vue 并且将用户选项传入\r\n}\r\nVue.prototype._init = function (options) {\r\n    // vue中初始化 this.$options 表示得是vue中得参数\r\n    // this指向Vue的实例，所以这里是将Vue的实例缓存给vm变量\r\n    let vm = this;\r\n    vm.$options = options;\r\n\r\n    //MVVM原理 响应式数据 需要数据重新初始化 \r\n    // 我们将不同得初始化放入到不同得文件夹中操作，方便维护\r\n    // 初始化state，包括props\\methods\\data\\compunted\\watch\r\n    // props\\data属性将其设置为vm的响应式属性即需要Object.defineProperty\r\n    // 绑定vm的props和打他属性并设置其getter和setter\r\n    initState(vm);\r\n\r\n    // 将实例挂载到dom上\r\n    if (vm.$options.el) {\r\n        vm.$mount(vm.$options.el)\r\n    }\r\n}\r\n\r\n\r\nfunction query(el){\r\n    if(typeof el === 'string'){\r\n        return document.querySelector(el);\r\n    }\r\n    return el;\r\n}\r\nconst mount = Vue.prototype.$mount;\r\n// 渲染页面将组件进行挂载\r\nVue.prototype.$mount = function(el){\r\n\r\n    let vm = this;\r\n    // 获取dom\r\n    el = vm.$el = el && query(el);\r\n\r\n    // 渲染时通过 watcher来渲染 \r\n    //  \r\n    /** \r\n     * 渲染watcher\r\n     * vue2.0 组件级别更新 new Vue产生一个组件\r\n     * \r\n     */\r\n    // 更新组件、渲染逻辑 \r\n     let updateComponent = ()=>{\r\n        //  更新组件\r\n        vm._update();\r\n     }\r\n    //  渲染watcher\r\n     new Watcher(vm,updateComponent);\r\n\r\n}\r\n// 目前用vue1.0 没有使用组件\r\n// 用户传入的数据 去更新视图\r\nVue.prototype._update = function(){\r\n    let vm = this;\r\n    let el = vm.$el;\r\n\r\n    // -------------现在vue1.0之后会用vdom重写----\r\n    // 要循环这个元素 将里边的内容 换成我们的数据\r\n    let node = document.createDocumentFragment();\r\n    let firstChild;\r\n    while(firstChild = el.firstChild){\r\n         console.log(el,firstChild);\r\n        node.appendChild(firstChild); //appendChild 具有移动的功能\r\n        \r\n    }\r\n   \r\n    complier(node,vm);\r\n    el.appendChild(node);\r\n    // 需要匹配{{}}的方式来进行替换\r\n\r\n}\r\nexport default Vue","import {isElement, isText} from '../utils'\r\nimport { util} from './diretive'\r\n\r\nexport function complier(node,vm){\r\n    let childNodes = node.childNodes;\r\n    console.log('complier',childNodes);\r\n    [...childNodes].forEach(c=>{\r\n        if(isElement(c)){ // 元素节点\r\n            complier(c,vm);\r\n        }else if(isText(c)){ //文本节点\r\n            return util.compilerText(c,vm);\r\n        }\r\n    })\r\n}\r\n\r\n","import Vue from \"vue\";\r\n\r\nlet vm = new Vue({\r\n    el:'#app', //表示要渲染得元素是app\r\n    data(){\r\n        return {\r\n            msg:'hello',\r\n            obj:{name:'lee',age:18},\r\n            arr:[1,2,3]\r\n        }\r\n    },\r\n    computed: {\r\n        \r\n    },\r\n    watch: {\r\n        \r\n    }\r\n});\r\nvm._data.msg = '更改值';\r\nvm.obj.name = 'li';\r\nvm.arr.push({a:1});\r\nconsole.log(vm.arr);\r\n/**\r\n1. 无法监听数据的 `length`，导致 `arr.length` 这样的数据改变无法被监听\r\n2. 通过角标更改数据，即类似 `arr[2] = 1` 这样的赋值操作，也无法被监听\r\n */"],"sourceRoot":""}